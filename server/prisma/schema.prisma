// this is your  prisma schema file
// learn more aboutit in the docs: https-url docs

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Role {
    ADMIN
    USER
}

enum OrderEventStatus {
    PENDING
    ACCEPTED
    OUT_FOR_DELIVERY
    DELIVERD
    CANCELLED
}

model User {
    id Int @id @default(autoincrement())
    name String
    email String @unique
    password String
    role Role @default(USER)
    defaultShippingAddress Int?
    defaultBillingAddress Int?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    address Address[]
    cartitem CartItem[]
    order Order[]

    @@map("users")
}

model Address {
    id Int @id @default(autoincrement())
    lineOne String
    lineTwo String?
    city String
    country String
    pincode String
    userId Int
    user User @relation(fields: [userId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("address")
}

model Product {
    id Int @id @default(autoincrement())
    name String
    description String
    price Decimal
    tags String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    cartitem CartItem[]
    order OrderProduct[]
    
    @@map("product")
}

model CartItem {
    id Int @id @default(autoincrement())
    userId Int
    user User @relation(fields: [userId], references: [id])
    productId Int
    product Product @relation(fields: [productId], references: [id])
    quantity Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("cartitem")
}

model Order {
    id Int @id @default(autoincrement())
    userId Int
    uesr User @relation(fields: [userId], references: [id])
    netAmount Decimal
    address String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    product OrderProduct[]
    events OrderEvent[]

    @@map("order")
}

model OrderProduct {
    id Int @id @default(autoincrement())
    orderId Int
    order Order @relation(fields: [orderId], references: [id])
    productId Int
    product Product @relation(fields: [productId], references: [id])
    quantity Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("order_products")
}

model OrderEvent {
    id Int @id @default(autoincrement())   
    orderId Int
    order Order @relation(fields: [orderId], references: [id])
    status OrderEventStatus @default(PENDING)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("order_event")
}